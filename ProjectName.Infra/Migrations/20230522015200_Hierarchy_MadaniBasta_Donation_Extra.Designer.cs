// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectName.Infra.Context;

#nullable disable

namespace ProjectName.Infra.Migrations
{
    [DbContext(typeof(DBCntxt))]
    [Migration("20230522015200_Hierarchy_MadaniBasta_Donation_Extra")]
    partial class Hierarchy_MadaniBasta_Donation_Extra
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApiUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ApiUserId");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "446e7434-f889-4ff4-bb1c-20abbaa353b9",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "142aa898-85b4-4e2d-895e-11385ffa8a53",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.ApiUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Donationz.DonationCategory", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DonationCategorys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "DonationCategory 1 Description",
                            Title = "DonationCategory 1 Title"
                        },
                        new
                        {
                            Id = 2,
                            Description = "DonationCategory 2 Description",
                            Title = "DonationCategory 2 Title"
                        },
                        new
                        {
                            Id = 3,
                            Description = "DonationCategory 3 Description",
                            Title = "DonationCategory 3 Title"
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Donationz.DonationCellMaster", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationzId")
                        .HasColumnType("int");

                    b.Property<int>("MajlisId")
                        .HasColumnType("int");

                    b.Property<int>("SUId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocationzId");

                    b.HasIndex("MajlisId");

                    b.HasIndex("SUId");

                    b.ToTable("DonationCellMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "",
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(4115),
                            Description = "DonationCellMaster 1 Description",
                            LocationzId = 1,
                            MajlisId = 1,
                            SUId = 1,
                            Title = "DonationCellMaster 1",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(4116)
                        },
                        new
                        {
                            Id = 2,
                            Address = "",
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(4119),
                            Description = "DonationCellMaster 2 Description",
                            LocationzId = 2,
                            MajlisId = 2,
                            SUId = 2,
                            Title = "DonationCellMaster 2",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(4120)
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Donationz.DonationSubType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DonationTypeId");

                    b.ToTable("DonationSubTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3937),
                            Description = "DonationSubType 1 Description",
                            DonationTypeId = 1,
                            Title = "DonationSubType 1",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3938)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3939),
                            Description = "DonationSubType 2 Description",
                            DonationTypeId = 2,
                            Title = "DonationSubType 2",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3940)
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Donationz.DonationType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("COAId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DonationCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SysmanAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("COAId");

                    b.HasIndex("DonationCategoryId");

                    b.HasIndex("SysmanAccountId");

                    b.ToTable("DonationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            COAId = 1,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3754),
                            Description = "DonationType 1 Description",
                            DonationCategoryId = 1,
                            SysmanAccountId = 1,
                            Title = "DonationType 1",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3755)
                        },
                        new
                        {
                            Id = 2,
                            COAId = 2,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3761),
                            Description = "DonationType 2 Description",
                            DonationCategoryId = 2,
                            SysmanAccountId = 2,
                            Title = "DonationType 2",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3761)
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Extraz.COA", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("COAs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "COA 1 Description",
                            Title = "COA 1 Title"
                        },
                        new
                        {
                            Id = 2,
                            Description = "COA 2 Description",
                            Title = "COA 2 Title"
                        },
                        new
                        {
                            Id = 3,
                            Description = "COA 3 Description",
                            Title = "COA 3 Title"
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Extraz.Locationz", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Locationzs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Locationz 1 Description",
                            Title = "Locationz 1 Title"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Locationz 2 Description",
                            Title = "Locationz 2 Title"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Locationz 3 Description",
                            Title = "Locationz 3 Title"
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Extraz.Majlis", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Majliss");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Majlis 1 Description",
                            Title = "Majlis 1 Title"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Majlis 2 Description",
                            Title = "Majlis 2 Title"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Majlis 3 Description",
                            Title = "Majlis 3 Title"
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Extraz.SysmanAccount", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SysmanAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "SysmanAccount 1 Description",
                            Title = "SysmanAccount 1 Title"
                        },
                        new
                        {
                            Id = 2,
                            Description = "SysmanAccount 2 Description",
                            Title = "SysmanAccount 2 Title"
                        },
                        new
                        {
                            Id = 3,
                            Description = "SysmanAccount 3 Description",
                            Title = "SysmanAccount 3 Title"
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.BG", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BGs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "BG 1 Description",
                            Title = "BG 1 Title"
                        },
                        new
                        {
                            Id = 2,
                            Description = "BG 2 Description",
                            Title = "BG 2 Title"
                        },
                        new
                        {
                            Id = 3,
                            Description = "BG 3 Description",
                            Title = "BG 3 Title"
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.LE", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("BGId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BGId");

                    b.ToTable("LEs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BGId = 1,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(2936),
                            Description = "LE 1 Description",
                            Title = "LE 1",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(2937)
                        },
                        new
                        {
                            Id = 2,
                            BGId = 2,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(2940),
                            Description = "LE 2 Description",
                            Title = "LE 2",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(2940)
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.OU", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LEId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LEId");

                    b.ToTable("OUs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3115),
                            Description = "OU 1 Description",
                            LEId = 1,
                            Title = "OU 1",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3116)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3119),
                            Description = "OU 2 Description",
                            LEId = 2,
                            Title = "OU 2",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3119)
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.Org", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orgs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Org 1 Description",
                            Title = "Org 1 Title"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Org 2 Description",
                            Title = "Org 2 Title"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Org 3 Description",
                            Title = "Org 3 Title"
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.SU", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OUId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OUId");

                    b.ToTable("SUs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3301),
                            Description = "SU 1 Description",
                            OUId = 1,
                            Title = "SU 1",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3301)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3303),
                            Description = "SU 2 Description",
                            OUId = 2,
                            Title = "SU 2",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3304)
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.Systemz", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrgId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.ToTable("Systemzs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(2726),
                            Description = "Systemz 1 Description",
                            OrgId = 1,
                            Title = "Systemz 1",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(2729)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(2733),
                            Description = "Systemz 2 Description",
                            OrgId = 2,
                            Title = "Systemz 2",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(2734)
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.MadaniBastaEntity.MadaniBasta", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MadaniBastas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "MadaniBasta 1 Description",
                            Title = "MadaniBasta 1 Title"
                        },
                        new
                        {
                            Id = 2,
                            Description = "MadaniBasta 2 Description",
                            Title = "MadaniBasta 2 Title"
                        },
                        new
                        {
                            Id = 3,
                            Description = "MadaniBasta 3 Description",
                            Title = "MadaniBasta 3 Title"
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.MadaniBastaEntity.MadaniBastaEvent", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MadaniBastaEvents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "MadaniBastaEvent 1 Description",
                            Title = "MadaniBastaEvent 1 Title"
                        },
                        new
                        {
                            Id = 2,
                            Description = "MadaniBastaEvent 2 Description",
                            Title = "MadaniBastaEvent 2 Title"
                        },
                        new
                        {
                            Id = 3,
                            Description = "MadaniBastaEvent 3 Description",
                            Title = "MadaniBastaEvent 3 Title"
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.MadaniBastaEntity.MadaniBastaPlace", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MadaniBastaPlaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "MadaniBastaPlace 1 Description",
                            Title = "MadaniBastaPlace 1 Title"
                        },
                        new
                        {
                            Id = 2,
                            Description = "MadaniBastaPlace 2 Description",
                            Title = "MadaniBastaPlace 2 Title"
                        },
                        new
                        {
                            Id = 3,
                            Description = "MadaniBastaPlace 3 Description",
                            Title = "MadaniBastaPlace 3 Title"
                        });
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.MadaniBastaEntity.MadaniBastaSubCategory", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MadaniBastaId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MadaniBastaId");

                    b.ToTable("MadaniBastaSubCategorys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3540),
                            Description = "Madani Basta Sub Category 1 Description",
                            MadaniBastaId = 1,
                            Title = "Madani Basta Sub Category 1",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3540)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3542),
                            Description = "Madani Basta Sub Category 2 Description",
                            MadaniBastaId = 2,
                            Title = "Madani Basta Sub Category 2",
                            UpdatedAt = new DateTime(2023, 5, 22, 1, 52, 0, 34, DateTimeKind.Utc).AddTicks(3543)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.ApiUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("ApiUserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectName.Infra.Entity.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Donationz.DonationCellMaster", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.Extraz.Locationz", "Locationz")
                        .WithMany()
                        .HasForeignKey("LocationzId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectName.Infra.Entity.Extraz.Majlis", "Majlis")
                        .WithMany()
                        .HasForeignKey("MajlisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectName.Infra.Entity.Hierarchy.SU", "SU")
                        .WithMany()
                        .HasForeignKey("SUId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locationz");

                    b.Navigation("Majlis");

                    b.Navigation("SU");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Donationz.DonationSubType", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.Donationz.DonationType", "DonationType")
                        .WithMany()
                        .HasForeignKey("DonationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonationType");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Donationz.DonationType", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.Extraz.COA", "COA")
                        .WithMany()
                        .HasForeignKey("COAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectName.Infra.Entity.Donationz.DonationCategory", "DonationCategory")
                        .WithMany()
                        .HasForeignKey("DonationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectName.Infra.Entity.Extraz.SysmanAccount", "SysmanAccount")
                        .WithMany()
                        .HasForeignKey("SysmanAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COA");

                    b.Navigation("DonationCategory");

                    b.Navigation("SysmanAccount");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.LE", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.Hierarchy.BG", "BG")
                        .WithMany("LEs")
                        .HasForeignKey("BGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BG");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.OU", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.Hierarchy.LE", "LE")
                        .WithMany()
                        .HasForeignKey("LEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LE");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.SU", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.Hierarchy.OU", "OU")
                        .WithMany()
                        .HasForeignKey("OUId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OU");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.Systemz", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.Hierarchy.Org", "Org")
                        .WithMany("Systemzs")
                        .HasForeignKey("OrgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Org");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.MadaniBastaEntity.MadaniBastaSubCategory", b =>
                {
                    b.HasOne("ProjectName.Infra.Entity.MadaniBastaEntity.MadaniBasta", "MadaniBasta")
                        .WithMany("MadaniBastaSubCategorys")
                        .HasForeignKey("MadaniBastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MadaniBasta");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.ApiUser", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.BG", b =>
                {
                    b.Navigation("LEs");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.Hierarchy.Org", b =>
                {
                    b.Navigation("Systemzs");
                });

            modelBuilder.Entity("ProjectName.Infra.Entity.MadaniBastaEntity.MadaniBasta", b =>
                {
                    b.Navigation("MadaniBastaSubCategorys");
                });
#pragma warning restore 612, 618
        }
    }
}
